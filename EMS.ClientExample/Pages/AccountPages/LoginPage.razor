@page "/identity/account/login"
@using EMS.ClientExample.Pages.OtherPages
@layout AuthenticationLayout
<div class="container">
    <div class="row">
        <div class="col-lg-4"></div>
        <div class="col-lg-4">
            <EditForm Enhance Model="_user" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator/>
                <div class="card bg-dark" style="opacity: 0.5; margin-top: 50%;border-radius: 10px;color: white;font-weight: bold;">
                    <div class="card-header text-center fs-5 mb-2">Fill this form to log in</div>
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                            <div class="col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center">
                                <img style="border-radius: 20px" src="images/companylogos/companylogo.jpg" height="50" width="50"/>
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group mt-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="_user.Email" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Password</label>
                            <input type="password" @bind="_user.Password" class="form-control"/>
                        </div>
                        <div class="form-group mt-3">
                            @if (ShowLoadingButton)
                            {
                                <ButtonLoadingPages></ButtonLoadingPages>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary float-end" type="submit">Login</button>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <span class="text-center">
                            Don't have account ? |
                            <a class="btn-link" href="identity/account/register">Sing Up</a>
                        </span>
                        <ValidationSummary/>
                    </div>
                </div>
            </EditForm>
        </div>
        <div class="col-lg-4"></div>
    </div>
</div>

@code {
    public bool ShowLoadingButton { get; set; } = false;
    Login _user = new();

    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }
    
    async Task HandleLogin()
    {
        ShowLoadingButton = true;
        var result = await AccountService.SignInAsync(_user);
        if (result!.Flag)
        {
            await DisplayDialog(result.Message, "Login Success");
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession() { Token = result.Token, RefreshToken = result.RefreshToken });
            NavManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            await DisplayDialog(result.Message, "Alert");
        }

        ShowLoadingButton = false;
    }

    private async Task DisplayDialog(string content, string title)
    {
        await DialogService.AlertAsync(content, title);
    }
    
    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if(isUserAuthenticated)
            NavManager.NavigateTo("/home/dashboard");
    }
}
